* emacs-easy-ide

emacs-easy-ide is a self-documenting emacs configuration, it aims easy to use
and cross platform.

** Features

*** Overview

+ efficienct user interface with =ido=
+ multiple cursors and regions with =multiple-cursors=
+ visual search and replace with =anzu=
+ project management with =projectile=
+ git version control with =magit=
+ visual undo and redo with =undo-tree=
+ auto completion with =auto-complete=
+ code folding with =hideshow= and =origami=
+ jumping to anywhere with =avy=
+ syntax checking with =flycheck=
+ whitespace cleanup on save
+ workspace restoration
+ nice looking uju theme
+ multiple editing modes include *emacs* and *vi* with =evil=
+ Sublime Text and Textmate style key bindings are always available
+ Multiple savable scratches with different languages
+ Smart tab behavior, auto complete => snippet expand => jump out => indent

*** Supported Programming Languages

| Language      | Auto completion | Code folding | Syntax checking | Jump to definition | File structure | REPL |
|---------------+-----------------+--------------+-----------------+--------------------+----------------+------|
| C             | YES             | YES          | YES             |                    |                |      |
| C++           | YES             | YES          | YES             |                    |                |      |
| Objective-C   |                 | TODO         |                 |                    |                |      |
| swift         |                 | TODO         |                 |                    |                | YES  |
| elisp         | YES             | YES          | YES             | YES                |                | YES  |
| Python (TODO) |                 | TODO         |                 |                    |                | YES  |
| Ruby          | YES             | Not precise  |                 |                    |                | YES  |
| php           |                 | YES          |                 |                    |                | YES  |
| javaScript    | YES             | YES          | YES             |                    |                | YES  |
| CoffeeScript  | YES             | YES          | YES             |                    |                | YES  |
| HTML          |                 | YES          |                 |                    |                |      |
| Haml          | YES             | YES          |                 |                    |                |      |
| Slim          | YES             | YES          |                 |                    |                |      |
| Jade          |                 | TODO         |                 |                    |                |      |
| Css           |                 | YES          |                 |                    |                |      |
| Sass          |                 | YES          |                 |                    |                |      |
| SCSS          |                 | YES          |                 |                    |                |      |
| Less          |                 | YES          |                 |                    |                |      |
| JSON          |                 | YES          | YES             |                    |                |      |
| YAML          |                 | TODO         |                 |                    |                |      |
| shell script  |                 | TODO         |                 |                    |                | YES  |

*** Supported Programming Frameworks

| Language | Framework     | File jumping | Build and run | Unit test | Node |
|----------+---------------+--------------+---------------+-----------+------|
| Ruby     | Ruby on Rails | YES          | YES           | YES       |      |
| css      | bootstrap     |              |               |           | TODO |

** Setup

This emacs configuration uses cask as package manager, you need to install cask
through instructions [[http://cask.readthedocs.org/en/latest/guide/installation.html][here]].

After you setup cask, you may backup your previous emacs configuration through

#+begin_src
$ mv ~/.emacs.d ~/.emacs.d.backup
#+end_src

Checkout this repo into emacs configuration directory

#+begin_src
$ git clone https://github.com/cheunghy/emacs-easy-ide ~/.emacs.d
#+end_src

Move to emacs configuration directory

#+begin_src
$ cd ~/.emacs.d
#+end_src

And execute =cask install=, cask will setup all the dependencies

#+begin_src
$ cask install
#+end_src

Open emacs and use it!

** Introduction of Usage

After installing, you can start to type.

Use =C-x C-f= to open a file, if the file is inside a project, the project is
automatically recorded. Next time you could open the project with =C-z p p=.

When editing, you could use =ESC= to toggle editing mode between *emacs* and
*vim*, in either mode, *Sublime Text* and *TextMate* style key bindings work
fine.

When you don't know a keybinding, you could use =C-z c k= to view and edit key
binding definition table.

You can save your file in several ways: =C-x C-s= is emacs way, =:w= is vim
way, and also =s-s= the Sublime Text way.

When you are working with git, for example, you want to push your local commit,
=C-z g g= to open *magit* status panel, and do the staging, commiting, merging,
rebasing, pushing and pulling there.

** Issues

*** OS X key bindings

In order to use Sublime Text and TextMate style keybindings, you need to use
emacs-mac rather than GNU Emacs. Since GNU Emacs has bug for the keybindings.

*** Jump to definition

Currently, the jump to definition feature is very experimental, it almost works
not as you expected.

*** Bug report

If you find any bugs, welcome to open issues and submit pull request.
